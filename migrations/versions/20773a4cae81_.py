"""empty message

Revision ID: 20773a4cae81
Revises: 32b31733cd79
Create Date: 2025-08-06 08:44:30.360332

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '20773a4cae81'
down_revision = '32b31733cd79'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('favorite_people',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('people_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['people_id'], ['people.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'people_id', name='unique_user_character_favorite')
    )
    op.create_table('favorite_planets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('planet_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['planet_id'], ['planet.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'planet_id', name='unique_user_planet_favorite')
    )
    op.create_table('favorite_vehicles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('vehicle_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicle.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'vehicle_id', name='unique_user_vehicle_favorite')
    )
    op.drop_table('favorite')
    with op.batch_alter_table('people', schema=None) as batch_op:
        batch_op.alter_column('edited',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
        batch_op.create_unique_constraint(None, ['url'])

    with op.batch_alter_table('planet', schema=None) as batch_op:
        batch_op.add_column(sa.Column('url', sa.String(length=100), nullable=False))
        batch_op.alter_column('edited',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
        batch_op.create_unique_constraint(None, ['url'])

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password',
               existing_type=sa.VARCHAR(length=40),
               type_=sa.String(length=255),
               existing_nullable=False)

    with op.batch_alter_table('vehicle', schema=None) as batch_op:
        batch_op.alter_column('edited',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
        batch_op.create_unique_constraint(None, ['url'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('vehicle', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('edited',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=40),
               existing_nullable=False)

    with op.batch_alter_table('planet', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('edited',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
        batch_op.drop_column('url')

    with op.batch_alter_table('people', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('edited',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)

    op.create_table('favorite',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('people_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vehicle_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('planet_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['people_id'], ['people.id'], name='favorite_people_id_fkey'),
    sa.ForeignKeyConstraint(['planet_id'], ['planet.id'], name='favorite_planet_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='favorite_user_id_fkey'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicle.id'], name='favorite_vehicle_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='favorite_pkey')
    )
    op.drop_table('favorite_vehicles')
    op.drop_table('favorite_planets')
    op.drop_table('favorite_people')
    # ### end Alembic commands ###
